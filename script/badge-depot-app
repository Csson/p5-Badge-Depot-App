#!perl
use 5.10.0;
use strict;
use warnings;

# ABSTRACT: Mojo app for hosting Badge::Depot badges
# AUTHORITY
# PODNAME: badge-depot-app
our $VERSION = '0.0017';

use Mojolicious::Lite;
use Mojo::UserAgent;
use Mojo::IOLoop;
use Module::Find qw/findallmod/;
use File::HomeDir qw/my_dist_data/;
use Path::Tiny;
use Try::Tiny;

unshift @{ app->plugins->namespaces }  => 'Badge::Depot::App::Plugin';
unshift @{ app->commands->namespaces } => 'Badge::Depot::App::Command';
app->types->type(svg => 'image/svg+xml');

plugin 'DB';
helper render_badge => sub {
    my $self = shift;
    my $c = shift;
    my $badge = shift;
    my $value = shift;
    my $color = shift;

    my $url_params = $c->req->params->to_hash;
    my $qs = scalar keys %{ $url_params } ? '?' . join '&' => map { "$_=$url_params->{ $_ }" } sort { $a cmp $b } keys %{ $url_params } : '';

    my $badge_url = "https://img.shields.io/badge/$badge-$value-$color.svg$qs";

    my $results = $self->db->query(q{
        SELECT badge_svg
          FROM shield
         WHERE badge_url = ?}, $badge_url);

    my $row = $results->hash;
    my $svg;
    if($row) {
        $svg = $row->{'badge_svg'};
    }
    else {
        $svg = Mojo::UserAgent->new->get("https://img.shields.io/badge/$badge-$value-$color.svg$qs")->res->body;
        $self->db->query(q{INSERT INTO shield (badge_url, badge_svg) VALUES (?, ?)}, $badge_url, $svg);
    }

    $c->render(format => 'svg', data => $svg);
};

try {
    my $data_dir = path(my_dist_data('Badge-Depot-App'));
    app->secrets([split /,/ => $data_dir->child('mojo.secrets')->slurp]);
    plugin Config => { file => $data_dir->child('mojo.conf')->realpath };
}
catch {};

my @badge_plugins = findallmod Badge::Depot::App::Plugin::Badge;

for my $plugin (@badge_plugins) {
    $plugin =~ s{^Badge::Depot::App::Plugin::}{};
    plugin $plugin;
}

any '/*any' => { any => '' } => sub {
    my $c = shift;
    $c->render(inline => qq{<!DOCTYPE html><html><head><title>Badge::Depot</title></head><body><p>See <a href="https://metacpan.org/pod/Badge::Depot::App">Badge::Depot::App</a>.</p></body></html>});
};

app->start;

__END__

=pod

=head1 SYNOPSIS

    use Badge::Depot::App;

=head1 DESCRIPTION

Badge::Depot::App is ...

=head1 SEE ALSO

=cut
